$columns: 20;

$column_width: 33;
$gutter: 15;

$tablet_column_width: 23;
$tablet_gutter: 15;

$large_desktop_column_width: 45;
$large_desktop_gutter: 15;

@mixin respond-to($media) {
  @if $media == handheld {
    @media only screen and (max-width: 747px) { @content; }
  }
  @else if $media == tablet {
    @media only screen and (max-width: 950px) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: 951px) and (max-width: 979px) { @content; }
  }
  @else if $media == large_desktop {
    @media only screen and (min-width: 1200px) { @content; }
  }
}

.container
{
  position: relative;
  margin: 0 auto;
  width: #{($columns * $column_width) + (($columns - 1) * $gutter)}px;
  @include respond-to(tablet) { width: #{($columns * $tablet_column_width) + (($columns - 1) * $tablet_gutter)}px;;}
  @include respond-to(large_desktop) { width: #{($columns * $large_desktop_column_width) + (($columns - 1) * $large_desktop_gutter)}px; }
  @include respond-to(handheld) { width: auto; padding: #{$tablet_gutter / 2}px; }
}

section.body
{
  margin-left: #{($column_width * 4) + ($gutter * (4 + 1))}px; }
  @include respond-to(tablet) { .offset#{4} { margin-left: #{($tablet_column_width * 4) + ($tablet_gutter * (4 + 1))}px; } }
  @include respond-to(large_desktop) { .offset#{4} { margin-left: #{($large_desktop_column_width * 4) + ($large_desktop_gutter * (4 + 1))}px; } }
  @include respond-to(handheld) { .offset#{4} { margin-left: 0px; }
}

body:not(.home) .container[role=main]
{
  padding-top: #{40 + $gutter}px;
  @include respond-to(handheld) { padding-top: 0px };
}

.container[role=main] 
{
  @include respond-to(handheld) { padding-top: 0px };
}

body.nobreadcrumb .container[role=main]
{
  padding-top: 0px;
}

[class*="span"] {
  float: left;
  min-height: 1px;
  margin-left: #{$gutter}px;
  @include respond-to(tablet) { margin-left: #{$tablet_gutter}px; }
  @include respond-to(large_desktop) { margin-left: #{$large_desktop_gutter}px; }
  @include respond-to(handheld) { float: none; margin-left: 0px; }
}

@for $i from 1 through $columns {
  .span#{$i} { width: #{($column_width * $i) + ($gutter * ($i - 1))}px; }
  @include respond-to(tablet) { .span#{$i} { width: #{($tablet_column_width * $i) + ($tablet_gutter * ($i - 1))}px; } }
  @include respond-to(large_desktop) { .span#{$i} { width: #{($large_desktop_column_width * $i) + ($large_desktop_gutter * ($i - 1))}px; } }
  @include respond-to(handheld) { .span#{$i} { width: auto; } }
}

@for $i from 1 through $columns {
  .offset#{$i} { margin-left: #{($column_width * $i) + ($gutter * ($i + 1))}px; }
  @include respond-to(tablet) { .offset#{$i} { margin-left: #{($tablet_column_width * $i) + ($tablet_gutter * ($i + 1))}px; } }
  @include respond-to(large_desktop) { .offset#{$i} { margin-left: #{($large_desktop_column_width * $i) + ($large_desktop_gutter * ($i + 1))}px; } }
  @include respond-to(handheld) { .offset#{$i} { margin-left: 0px; } }
}

.row 
{
  margin-top: #{$base_font_size};
  margin-left: #{$gutter * -1}px;
  @include respond-to(tablet) { margin-left: $tablet_gutter * -1px; }
  @include respond-to(large_desktop) { margin-left: $large_desktop_gutter * -1px;  }
  @include respond-to(handheld) { margin-left: 0px; margin-top: 0px; }
  *zoom: 1;
  &:first-of-type, &.next
  {
    margin-top: 0px;
  }

  &.three
  {
    .span1 { width: 305px; 
    }
    @include respond-to(tablet) { .span1 { width: 238px; } }
    @include respond-to(large_desktop) { .span1 { width: 385px; } }
    @include respond-to(handheld) { .span1 { width: auto; @include rem-fallback(margin-bottom, 1.5); } }
  }

  &.three.padded
  {
    .span1 { 
    width: 305px;
    &:not(:last-child){
    padding-right: 15px; 
    border-right: 1px solid $grey3;
    @include respond-to(handheld) { border-right: 0; }
    }

    }
    @include respond-to(tablet) { .span1 { width: 238px; } }
    @include respond-to(large_desktop) { .span1 { width: 385px; } }
    @include respond-to(handheld) { .span1 { width: auto; } }
  }


  &.three_span14
  {
    .span1 { width: 209px; 
    }
    @include respond-to(tablet) { .span1 { width: 162px; } }
    @include respond-to(large_desktop) { .span1 { width: 265px; } }
    @include respond-to(handheld) { .span1 { width: auto; @include rem-fallback(margin-bottom, 1.5); } }
  }
}



.col-2 {
width: 47%;

}

.col-3 {
  width: 30.33333333%;
  @include respond-to(tablet) { width: 100%; }
}

.col-4 {
  width: 22%; 
  @include respond-to(tablet) { width: 47%; }
  @include respond-to(handheld) { width: 100%; }
}

.col-2, .col-3, .col-4 {
  position: relative;
  min-height: 1px;
  margin-left: 3%;
  @include rem-fallback(margin-bottom, 1.5);
  @include respond-to(handheld) { width: 100%; margin-left: 0;}
  @include respond-to(tablet) { width: 100%; margin-left: 0; }
  @include respond-to(desktop) { float: left; }
  @include respond-to(large_desktop) { float: left; }
  .inner {
    @include rem-fallback(margin-bottom, 1.5)
  }
}


.row:before,
.row:after 
{
  display: table;
  content: "";
  line-height: 0;
}

.row:after 
{
  clear: both;
}
